use ggez::event::KeyCode;
use lazy_static;
use std::collections::HashMap;

pub const ALL_KEYS: [KeyCode; 161] = [
    KeyCode::Key1,
    KeyCode::Key2,
    KeyCode::Key3,
    KeyCode::Key4,
    KeyCode::Key5,
    KeyCode::Key6,
    KeyCode::Key7,
    KeyCode::Key8,
    KeyCode::Key9,
    KeyCode::Key0,
    KeyCode::A,
    KeyCode::B,
    KeyCode::C,
    KeyCode::D,
    KeyCode::E,
    KeyCode::F,
    KeyCode::G,
    KeyCode::H,
    KeyCode::I,
    KeyCode::J,
    KeyCode::K,
    KeyCode::L,
    KeyCode::M,
    KeyCode::N,
    KeyCode::O,
    KeyCode::P,
    KeyCode::Q,
    KeyCode::R,
    KeyCode::S,
    KeyCode::T,
    KeyCode::U,
    KeyCode::V,
    KeyCode::W,
    KeyCode::X,
    KeyCode::Y,
    KeyCode::Z,
    KeyCode::Escape,
    KeyCode::F1,
    KeyCode::F2,
    KeyCode::F3,
    KeyCode::F4,
    KeyCode::F5,
    KeyCode::F6,
    KeyCode::F7,
    KeyCode::F8,
    KeyCode::F9,
    KeyCode::F10,
    KeyCode::F11,
    KeyCode::F12,
    KeyCode::F13,
    KeyCode::F14,
    KeyCode::F15,
    KeyCode::F16,
    KeyCode::F17,
    KeyCode::F18,
    KeyCode::F19,
    KeyCode::F20,
    KeyCode::F21,
    KeyCode::F22,
    KeyCode::F23,
    KeyCode::F24,
    KeyCode::Snapshot,
    KeyCode::Scroll,
    KeyCode::Pause,
    KeyCode::Insert,
    KeyCode::Home,
    KeyCode::Delete,
    KeyCode::End,
    KeyCode::PageDown,
    KeyCode::PageUp,
    KeyCode::Left,
    KeyCode::Up,
    KeyCode::Right,
    KeyCode::Down,
    KeyCode::Back,
    KeyCode::Return,
    KeyCode::Space,
    KeyCode::Compose,
    KeyCode::Caret,
    KeyCode::Numlock,
    KeyCode::Numpad0,
    KeyCode::Numpad1,
    KeyCode::Numpad2,
    KeyCode::Numpad3,
    KeyCode::Numpad4,
    KeyCode::Numpad5,
    KeyCode::Numpad6,
    KeyCode::Numpad7,
    KeyCode::Numpad8,
    KeyCode::Numpad9,
    KeyCode::AbntC1,
    KeyCode::AbntC2,
    KeyCode::Add,
    KeyCode::Apostrophe,
    KeyCode::Apps,
    KeyCode::At,
    KeyCode::Ax,
    KeyCode::Backslash,
    KeyCode::Calculator,
    KeyCode::Capital,
    KeyCode::Colon,
    KeyCode::Comma,
    KeyCode::Convert,
    KeyCode::Decimal,
    KeyCode::Divide,
    KeyCode::Equals,
    KeyCode::Grave,
    KeyCode::Kana,
    KeyCode::Kanji,
    KeyCode::LAlt,
    KeyCode::LBracket,
    KeyCode::LControl,
    KeyCode::LShift,
    KeyCode::LWin,
    KeyCode::Mail,
    KeyCode::MediaSelect,
    KeyCode::MediaStop,
    KeyCode::Minus,
    KeyCode::Multiply,
    KeyCode::Mute,
    KeyCode::MyComputer,
    KeyCode::NavigateForward,
    KeyCode::NavigateBackward,
    KeyCode::NextTrack,
    KeyCode::NoConvert,
    KeyCode::NumpadComma,
    KeyCode::NumpadEnter,
    KeyCode::NumpadEquals,
    KeyCode::OEM102,
    KeyCode::Period,
    KeyCode::PlayPause,
    KeyCode::Power,
    KeyCode::PrevTrack,
    KeyCode::RAlt,
    KeyCode::RBracket,
    KeyCode::RControl,
    KeyCode::RShift,
    KeyCode::RWin,
    KeyCode::Semicolon,
    KeyCode::Slash,
    KeyCode::Sleep,
    KeyCode::Stop,
    KeyCode::Subtract,
    KeyCode::Sysrq,
    KeyCode::Tab,
    KeyCode::Underline,
    KeyCode::Unlabeled,
    KeyCode::VolumeDown,
    KeyCode::VolumeUp,
    KeyCode::Wake,
    KeyCode::WebBack,
    KeyCode::WebFavorites,
    KeyCode::WebForward,
    KeyCode::WebHome,
    KeyCode::WebRefresh,
    KeyCode::WebSearch,
    KeyCode::WebStop,
    KeyCode::Yen,
    KeyCode::Copy,
    KeyCode::Paste,
    KeyCode::Cut,
];

lazy_static! {
    pub static ref KEY_INDEX_MAP: HashMap<KeyCode, usize> = make_key_index_map();
}

fn make_key_index_map() -> HashMap<KeyCode, usize> {
    let mut map = HashMap::with_capacity(ALL_KEYS.len());
    for i in 0..ALL_KEYS.len() {
        map.insert(ALL_KEYS[i], i);
    }
    map
}
